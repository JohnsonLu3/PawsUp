{"version":3,"sources":["components/Header.jsx","components/main/PetImage.jsx","components/main/Description.jsx","components/main/Controls.jsx","components/main/Frame.jsx","components/main/Main.jsx","components/Footer.jsx","components/CornerRibbon.jsx","components/App.jsx","serviceWorker.js","index.js"],"names":["Header","className","icon","faPaw","PetImage","src","alt","Description","props","name","age","sex","size","desc","Controls","onClick","printTest","faEllipsisH","console","log","Frame","state","defaultPos","x","y","this","draggableElement","ReactDOM","findDOMNode","setState","axis","position","onStop","reset","bind","onDrag","handleDrag","bounds","offSet","parseInt","$","css","split","addZone","window","screen","width","passZone","Math","abs","React","Component","Main","Footer","href","App","Boolean","location","hostname","match","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0TAeeA,MATf,WACE,OACE,4BAAQC,UAAU,IAChB,kBAAC,IAAD,CAAiBA,UAAU,YAAYC,KAAMC,MAC7C,yC,8CCPS,SAASC,IACpB,OACI,yBAAKH,UAAU,YACX,yBAAKI,IAAI,+EAA+EC,IAAI,MCJzF,SAASC,EAAYC,GAAQ,IAChCC,EAA+BD,EAA/BC,KAAMC,EAAyBF,EAAzBE,IAAKC,EAAoBH,EAApBG,IAAKC,EAAeJ,EAAfI,KAAMC,EAASL,EAATK,KAC9B,OACI,yBAAKZ,UAAU,WACX,4BAAKQ,GACL,yBAAKR,UAAU,QACX,2BAAIS,GACJ,2BAAIC,GACJ,2BAAIC,IAER,uBAAGX,UAAU,SAASY,ICRnB,SAASC,IACpB,OACI,yBAAKb,UAAU,YACX,4BAAQA,UAAU,OAAM,kBAAC,IAAD,CAAiBA,UAAU,YAAYC,KAAMC,IAAOY,QAASC,KACrF,4BAAQf,UAAU,QAAO,kBAAC,IAAD,CAAiBA,UAAU,YAAYC,KAAMe,IAAaF,QAASC,KAC5F,4BAAQf,UAAU,QAAO,kBAAC,IAAD,CAAiBA,UAAU,YAAYC,KAAMC,IAAOY,QAASC,MAMlG,SAASA,IACLE,QAAQC,IAAI,Q,qCCqCCC,E,2MA1CbC,MAAQ,CACJC,WAAY,CAAEC,EAAG,EAAGC,EAAG,I,mFAIvBC,KAAKJ,MAAMK,iBAAmBC,IAASC,YAAYH,MACnDA,KAAKI,SAASJ,KAAKJ,S,+BAKnB,IAAIC,EAAaG,KAAKJ,MAAMC,WAE5B,OACI,kBAAC,IAAD,CAAWQ,KAAK,IAAIC,SAAUT,EAAYU,OAAQP,KAAKQ,MAAMC,KAAKT,MAAOU,OAAQV,KAAKW,WAAWF,KAAKT,MAAOY,OAAO,UAChH,yBAAKpC,UAAU,gBACX,kBAACG,EAAD,MACA,kBAACG,EAAD,CAAaE,KAAK,OAAOC,IAAI,QAAQC,IAAI,SAASC,KAAK,SAASC,KAAK,KACrE,kBAACC,EAAD,U,mCAOZ,IAAIY,EAAmBD,KAAKJ,MAAMK,iBAC9BY,EAASC,SAASC,IAAEd,GAAkBe,IAAI,aAAaC,MAAM,KAAK,IAClEC,GAAYC,OAAOC,OAAOC,MAAM,EAChCC,EAAYH,OAAOC,OAAOC,MAAM,EAChCR,EAASK,EACTzB,QAAQC,IAAI,OACPmB,EAASS,GACd7B,QAAQC,IAAI,QAEhBqB,IAAEd,GAAkBe,IAAI,CAAC,QAAY,EAAGO,KAAKC,IAAIX,IAASM,OAAOC,OAAOC,MAAM,O,8BAI9E,IAAIpB,EAAmBD,KAAKJ,MAAMK,iBAClCc,IAAEd,GAAkBe,IAAI,CAAC,QAAY,Q,GAzCzBS,IAAMC,WCGXC,MARf,WACE,OACE,8BACI,kBAAC,EAAD,Q,MCIQC,MARhB,WAEI,OACI,gCACI,2CAAgB,uBAAGC,KAAK,4BAAR,cAAhB,SAAuE,uBAAGA,KAAK,yCAAR,qB,MCJpE,SAASD,IACpB,OACI,yBAAKpD,UAAU,gBACX,yBAAKA,UAAU,kDAAf,oBCYGsD,MAXf,WACE,OACE,yBAAKtD,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCDcuD,QACW,cAA7BZ,OAAOa,SAASC,UAEe,UAA7Bd,OAAOa,SAASC,UAEhBd,OAAOa,SAASC,SAASC,MACvB,2DCZNhC,IAASiC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.bb9984e8.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../scss/App.scss';\r\nimport '../scss/Header.scss';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPaw } from '@fortawesome/free-solid-svg-icons'\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"\">\r\n      <FontAwesomeIcon className=\"brandIcon\" icon={faPaw} />\r\n      <h1>Paws Up</h1>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react'\r\nimport '../../scss/Frame.scss'\r\n\r\nexport default function PetImage(){\r\n    return(\r\n        <div className=\"petImage\">\r\n            <img src=\"https://dl5zpyw5k3jeb.cloudfront.net/photos/pets/46353677/1/?bust=1571956783\" alt=\"\"/>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function Description(props) {\r\n    const { name, age, sex, size, desc } = props;\r\n    return (\r\n        <div className=\"profile\">\r\n            <h2>{name}</h2>\r\n            <div className=\"desc\">\r\n                <p>{age}</p>\r\n                <p>{sex}</p>\r\n                <p>{size}</p>\r\n            </div>\r\n            <p className=\"about\">{desc}</p>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPaw, faEllipsisH } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport default function Controls(){\r\n    return(\r\n        <div className=\"controls\">\r\n            <button className=\"add\"><FontAwesomeIcon className=\"brandIcon\" icon={faPaw} onClick={printTest}/></button>\r\n            <button className=\"more\"><FontAwesomeIcon className=\"brandIcon\" icon={faEllipsisH} onClick={printTest}/></button>\r\n            <button className=\"pass\"><FontAwesomeIcon className=\"brandIcon\" icon={faPaw} onClick={printTest}/></button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nfunction printTest(){\r\n    console.log(\"test\");\r\n}","import React from 'react'\r\nimport ReactDOM from 'react-dom';\r\nimport '../../scss/Frame.scss'\r\nimport PetImage from './PetImage'\r\nimport Description from './Description'\r\nimport Controls from './Controls'\r\nimport Draggable, { DraggableCore } from 'react-draggable';\r\nimport $ from \"jquery\"\r\n\r\nclass Frame extends React.Component {\r\n\r\n    state = {\r\n        defaultPos: { x: 0, y: 0 }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.state.draggableElement = ReactDOM.findDOMNode(this);\r\n        this.setState(this.state);\r\n    }\r\n\r\n    render() {\r\n\r\n        let defaultPos = this.state.defaultPos;\r\n\r\n        return (\r\n            <Draggable axis=\"x\" position={defaultPos} onStop={this.reset.bind(this)} onDrag={this.handleDrag.bind(this)} bounds=\"parent\">\r\n                <div className=\"frame shadow\">\r\n                    <PetImage />\r\n                    <Description name=\"Lola\" age=\"Puppy\" sex=\"Female\" size=\"Medium\" desc=\"\" />\r\n                    <Controls />\r\n                </div>\r\n            </Draggable>\r\n        )\r\n    }\r\n\r\n    handleDrag() {\r\n        let draggableElement = this.state.draggableElement;\r\n        let offSet = parseInt($(draggableElement).css('transform').split(',')[4]);\r\n        let addZone = -(window.screen.width/4);\r\n        let passZone = (window.screen.width/4);\r\n        if (offSet < addZone) {\r\n            console.log(\"add\");\r\n        }else if(offSet > passZone){\r\n            console.log(\"pass\");\r\n        }\r\n        $(draggableElement).css({'opacity' : 1-(Math.abs(offSet)/(window.screen.width/2))});\r\n    }\r\n\r\n    reset() {\r\n        let draggableElement = this.state.draggableElement;\r\n        $(draggableElement).css({'opacity' : 1});\r\n    }\r\n\r\n} export default Frame","import React from 'react';\r\nimport '../../scss/App.scss';\r\nimport Frame from './Frame'\r\n\r\nfunction Main() {\r\n  return (\r\n    <main>\r\n        <Frame />\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react'\r\nimport '../scss/Footer.scss'\r\n\r\nfunction Footer() {\r\n\r\n    return(\r\n        <footer>\r\n            <p>Developed by <a href=\"https://johnsonlu.dev/#/\">Johnson Lu</a> with <a href=\"https://www.petfinder.com/developers/\">Pet Finder API</a></p>\r\n        </footer>\r\n    )\r\n\r\n}export default Footer","import React from 'react'\r\nimport '../scss/ConerRibbon.scss'\r\n\r\nexport default function Footer(){\r\n    return(\r\n        <div className=\"cornerRibbon\">\r\n            <div className=\"corner-ribbon bottom-right sticky green shadow\">In Developement</div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport '../scss/App.scss';\nimport Header from './Header';\nimport Main from './main/Main';\nimport Footer from './Footer'\nimport CornerRibbon from './CornerRibbon'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Main />\n      <CornerRibbon/>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './scss/index.scss';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}